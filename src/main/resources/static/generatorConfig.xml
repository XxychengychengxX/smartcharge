<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>

    <!--
            targetRuntime: 执行生成的逆向工程的版本
                    MyBatis3Simple: 生成基本的CRUD（清新简洁版）
                    MyBatis3: 生成带条件的CRUD（奢华尊享版）
     -->
    <context id="DB2Tables" targetRuntime="MyBatis3">

        <!--配置的javabean的属性-->
        <property name="javaNamingConvention" value="camelCase"/>
        <!--使用真实的列名-->
        <property name="useActualColumnNames" value="false"/>

        <plugin type="org.mybatis.generator.plugins.ToStringPlugin">

        </plugin>
        <!-- 数据库的连接信息 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/smartcharge"
                        userId="root"
                        password="121148">
            <!-- connectionURL属性，防止生成不同数据库同名表的代码 -->
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>

        <!-- javaBean的生成策略-->
        <javaModelGenerator targetPackage="com.project.smartcharge.pojo" targetProject=".\src\main\java">

            <!--enableSubPackages:是否让schema作为包的后缀-->
            <property name="enableSubPackages" value="false" />
            <!--从数据库返回的数据是否要清除前后空格-->
            <property name="trimStrings" value="true" />
            <!--自动配置toString（）方法-->
            <property name="toStringStyle" value="reflectionToString"/>
        </javaModelGenerator>

        <!-- SQL映射文件的生成策略,这里生成在resources下-->
        <sqlMapGenerator targetPackage="com.project.smartcharge.mapper"  targetProject=".\src\main\resources">
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>


        <!-- Mapper接口的生成策略 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.project.smartcharge.mapper"
                             targetProject=".\src\main\java">
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>

        <!-- 逆向分析的表 -->
        <!-- tableName设置为%号，可以对应所有表，此时不写domainObjectName -->
        <!-- domainObjectName属性指定生成出来的实体类的类名 -->
        <table tableName="device" domainObjectName="Device">
            <property name="useActualColumnNames" value="true"/>
        </table>

        <!--<table tableName="t_customer" domainObjectName="Custom/er"/>
        <table tableName="t_order" domainObjectName="Order"/>-->
    </context>
</generatorConfiguration>
